<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAEBAAAAEAIABoBAAAFgAAACgAAAAQAAAAIAAAAAEAIAAAAAAAAAQAABILAAASCwAAAAAAAAAA
        AAAAAAAAAAAAAMZ9AADGfQACxn0AF8Z9AGbGfQA0xn0AhsZ9ADbGfQB6xn0AJsZ9ACjGfQAExn0AAAAA
        AAAAAAAAAAAAAMZ9AADGfQAIxn0AYcZ9ADvGfQBJxn0AFMZ9ACLGfQASxn0ANcZ9ADzGfQCQxn0AJ8Z9
        AAvGfQAAxn0AAMZ9AADGfQAYxn0ANMZ9AFLGfQAfyIEPCcd/BzfGfQJXxn0CWMd/BzbHgAoPxn0AHcZ9
        AFnGfQBUxnwAAMZ9AADGfAAAxn0AN8Z9AF/HgAgCx38HMsZ+A7DGfQHxxn4C98Z+AvbGfQHyxn4DsMd/
        CDHGfQAaxn0ANMZ9AD/GfQADxn0AOsZ9AGTGfQAIx38HMMd/BqvGfQH3xn0B+8Z+A+PHfgXQxn0B+cZ+
        A/TGfgTRx38HM8Z9ACzGfQBxxn0ADcZ9AEnGfQBcyIEPCsZ+A6zHfgSJx38IcMd+BdrHfgXIyIEOTcd+
        BsTHfwfJx38Gxcd/BmnJhBgDxn0AMMZ9ACfGfQABwXMAAcd/CDLGfgTgx4AKe8d+BIjGfQHqx34FgMmD
        FxTHfgaox34FzciBD4HIgxRjyYQZIcZ9ADnGfQAsAAAAAMeADADIgQ4wyIAOW8iBDofGfgL1xn0B6MiB
        DULKhR0vyYMXO8iBDCbIgQwxyIIQocqFGTrKhh0Axn0AAMZ9AEDGfQAb1J9pAcR3CRLIgRBYx38GxsZ+
        A+/JgxGly4knNMuIJAnKhyAAzY0bAMqHHivJhRclxXsAB8Z9AAPGfQB9xn0AM8d/ChnQkzCwzY0mmciB
        DlfGfgThx38G0seACYjNjSOHz5IyQciBDzPIgQxXyIIRE8Z9AFjGfQBMxn0AHcZ9AErGfQQSz5Irp8qH
        FejHfwevxn4C8sZ+BN3GfQHyx4AH7seACdnHfwjDx38Kisd/CA/GfQAoxn0AHMZ9ACnGfQBXxn0AC8V7
        ASvGfQHQxn4C88d/Bs3Hfwiyx38Hscd+BcfGfgPvx38HsciBDyPGfQAcxn0AWcZ9AA3EewAAxn0AFcZ9
        AEnGfQEKx38IKcZ+BKPHfgTVxn0C78Z+At/HgAmXx38Jjsd/CifGfQAtxn0AN8Z9ABjGfQADxn0AAMZ9
        ABDGfQAzxn0ANcZ9ADbIgQ8Ix38HMMd/BVLHfwVTyIENI8d/BxLGfQAwxn0AQ8Z9AEbGfQAAxn0AAAAA
        AAAAAAAAxn0AAMZ9AD3GfQA7xn0AK8Z9ABfGfQAuxn0AEMZ9AADGfQAZxn0AeMZ9ABvGfQAAx34AAMV9
        AAAAAAAAAAAAAMZ9AADGfQAAxn0AAMZ9AC3GfQAUxn0AT8Z9AAvGfQAAxn0AAsZ9ABDGfQACxn0AAAAA
        AAAAAAAA4AcAAMADAACAAQAAAAAAAAAAAAAAAAAAAAAAAMACAAAAMAAAAAAAAAAAAAAAAAAAAAAAAIAD
        AADgRwAA6EcAAA==
</value>
  </data>
</root>